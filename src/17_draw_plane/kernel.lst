     1                                  ;***********************************************************
     2                                  ;  マクロ
     3                                  ;***********************************************************
     4                                  %include "../include/define.s"
     1                              <1> BOOT_SIZE equ (1024 * 8)
     2                              <1> KERNEL_SIZE equ (1024 * 8)
     3                              <1> 
     4                              <1> BOOT_LOAD equ 0x7C00
     5                              <1> BOOT_END equ (BOOT_LOAD + BOOT_SIZE)
     6                              <1> 
     7                              <1> KERNEL_LOAD equ 0x0010_1000
     8                              <1> 
     9                              <1> SECT_SIZE equ (512)
    10                              <1> 
    11                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)
    12                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
    13                              <1> 
    14                              <1> E820_RECORD_SIZE equ 20
     5                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1>     %rep %0 - 1
     3                              <1>         push %{-1:-1}
     4                              <1>         %rotate -1
     5                              <1>     %endrep
     6                              <1>     %rotate -1
     7                              <1> 
     8                              <1>     call %1
     9                              <1> 
    10                              <1>     %if 1 < %0
    11                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>     %endif
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 <res 00000002>      <1>     .no resw 1      ; ドライブ番号
    17 00000002 <res 00000002>      <1>     .cyln resw 1    ; シリンダ
    18 00000004 <res 00000002>      <1>     .head resw 1    ; ヘッド
    19 00000006 <res 00000002>      <1>     .sect resw 1    ; セクタ
    20                              <1> endstruc
     6                                  
     7                                          ORG KERNEL_LOAD
     8                                  
     9                                  [BITS 32]
    10                                  ;***********************************************************
    11                                  ;  エントリポイント
    12                                  ;***********************************************************
    13                                  kernel:
    14                                          ;------------------------------------------
    15                                          ; フォントアドレスを取得
    16                                          ;------------------------------------------
    17 00000000 BE007E0000                      mov esi, BOOT_LOAD + SECT_SIZE
    18 00000005 0FB706                          movzx eax, word[esi + 0]
    19 00000008 0FB75E02                        movzx ebx, word[esi + 2]
    20 0000000C C1E004                          shl eax, 4
    21 0000000F 01D8                            add eax, ebx
    22 00000011 A3[D8000000]                    mov [FONT_ADR], eax
    23                                  
    24                                          ;------------------------------------------
    25                                          ; 8ビットの横線
    26                                          ;------------------------------------------
    27 00000016 B407                            mov ah, 0x07
    28 00000018 B002                            mov al, 0x02
    29 0000001A 66BAC403                        mov dx, 0x03C4
    30 0000001E 66EF                            out dx, ax
    31                                  
    32 00000020 C60500000A00FF                  mov [0x000A_0000 + 0], byte 0xFF
    33                                  
    34 00000027 B404                            mov ah, 0x04
    35 00000029 66EF                            out dx, ax
    36                                  
    37 0000002B C60501000A00FF                  mov [0x000A_0000 + 1], byte 0xFF
    38                                  
    39 00000032 B402                            mov ah, 0x02
    40 00000034 66EF                            out dx, ax
    41                                  
    42 00000036 C60502000A00FF                  mov [0x000A_0000 + 2], byte 0xFF
    43                                  
    44 0000003D B401                            mov ah, 0x01
    45 0000003F 66EF                            out dx, ax
    46                                  
    47 00000041 C60503000A00FF                  mov [0x000A_0000 + 3], byte 0xFF
    48                                  
    49                                          ;------------------------------------------
    50                                          ; 画面を横切る横線
    51                                          ;------------------------------------------
    52 00000048 B402                            mov ah, 0x02
    53 0000004A 66EF                            out dx, ax
    54                                  
    55 0000004C 8D3D00000A00                    lea edi, [0x000A_0000]
    56 00000052 B950000000                      mov ecx, 80
    57 00000057 B0FF                            mov al, 0xFF
    58 00000059 F3AA                            rep stosb
    59                                  
    60                                          ;------------------------------------------
    61                                          ; 2行目に8ドットの矩形
    62                                          ;------------------------------------------
    63 0000005B BF01000000                      mov edi, 1
    64                                  
    65 00000060 C1E708                          shl edi, 8
    66 00000063 8DBCBF00000A00                  lea edi, [edi * 4 + edi + 0xA_0000]
    67                                  
    68 0000006A 66C707FF00                      mov [edi + (80 * 0)], word 0xFF
    69 0000006F 66C74750FF00                    mov [edi + (80 * 1)], word 0xFF
    70 00000075 66C787A0000000FF00              mov [edi + (80 * 2)], word 0xFF
    71 0000007E 66C787F0000000FF00              mov [edi + (80 * 3)], word 0xFF
    72 00000087 66C78740010000FF00              mov [edi + (80 * 4)], word 0xFF
    73 00000090 66C78790010000FF00              mov [edi + (80 * 5)], word 0xFF
    74 00000099 66C787E0010000FF00              mov [edi + (80 * 6)], word 0xFF
    75 000000A2 66C78730020000FF00              mov [edi + (80 * 7)], word 0xFF
    76                                  
    77                                          ;------------------------------------------
    78                                          ; 3行目に文字を描画
    79                                          ;------------------------------------------
    80 000000AB BE41000000                      mov esi, 'A'
    81 000000B0 C1E604                          shl esi, 4
    82 000000B3 0335[D8000000]                  add esi, [FONT_ADR]
    83                                  
    84 000000B9 BF02000000                      mov edi, 2
    85 000000BE C1E708                          shl edi, 8
    86 000000C1 8DBCBF00000A00                  lea edi, [edi * 4 + edi + 0xA_0000]
    87                                  
    88 000000C8 B910000000                      mov ecx, 16
    89                                  .10L:
    90 000000CD A4                              movsb
    91 000000CE 83C74F                          add edi, 80 - 1
    92 000000D1 E2FA                            loop .10L
    93                                  
    94                                          ;------------------------------------------
    95                                          ; 処理の終了
    96                                          ;------------------------------------------
    97 000000D3 EBFE                            jmp $
    98                                  
    99 000000D5 00<rept>                ALIGN 4, db 0
   100 000000D8 00000000                FONT_ADR: dd 0
   101                                  
   102                                  ;***********************************************************
   103                                  ;  パディング
   104                                  ;***********************************************************
   105 000000DC 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0
