read_lba:
        ;-----------------------------------------
        ; 【スタックフレームの構築】
        ;-----------------------------------------
        push bp
        mov bp, sp

        ;-----------------------------------------
        ; 【レジスタの保存】
        ;-----------------------------------------
        push si

        ;-----------------------------------------
        ; 【前処理】
        ;-----------------------------------------
        mov si, [bp + 4]

        ;-----------------------------------------
        ; LBA→CHS変換
        ;-----------------------------------------
        mov ax, [bp + 6]
        cdecl lba_chs, si, .chs, ax

        ;-----------------------------------------
        ; ドライブ番号のコピー
        ;-----------------------------------------
        mov al, [si + drive.no]
        mov [.chs + drive.no], al

        ;-----------------------------------------
        ; セクタの読み込み
        ;-----------------------------------------
        cdecl read_chs, .chs, word[bp + 8], word[bp + 10]

        ;-----------------------------------------
        ; 【レジスタの復帰】
        ;-----------------------------------------
        pop si

        ;-----------------------------------------
        ; 【スタックフレームの破棄】
        ;-----------------------------------------
        mov sp, bp
        pop bp

        ret

ALIGN 2
.chs:   times drive_size db 0